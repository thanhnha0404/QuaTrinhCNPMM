const fs = require('fs');
const path = require('path');

const switchSearchEngine = (engine) => {
  try {
    const configPath = path.join(__dirname, 'config.env');
    
    // ƒê·ªçc file config hi·ªán t·∫°i
    let config = '';
    if (fs.existsSync(configPath)) {
      config = fs.readFileSync(configPath, 'utf8');
    }
    
    // C·∫≠p nh·∫≠t c·∫•u h√¨nh
    if (engine === 'elasticsearch') {
      config = config.replace(/USE_ELASTICSEARCH=.*/g, 'USE_ELASTICSEARCH=true');
      console.log('‚úÖ ƒê√£ chuy·ªÉn sang Elasticsearch');
      console.log('üìã C√°c b∆∞·ªõc ti·∫øp theo:');
      console.log('1. Kh·ªüi ƒë·ªông Elasticsearch: docker run -d -p 9200:9200 -e "discovery.type=single-node" elasticsearch:7.17.0');
      console.log('2. Setup: npm run setup-elasticsearch');
      console.log('3. Test: npm run test-fuzzy');
    } else if (engine === 'mongodb') {
      config = config.replace(/USE_ELASTICSEARCH=.*/g, 'USE_ELASTICSEARCH=false');
      console.log('‚úÖ ƒê√£ chuy·ªÉn sang MongoDB');
      console.log('üìã C√°c b∆∞·ªõc ti·∫øp theo:');
      console.log('1. Kh·ªüi ƒë·ªông MongoDB: mongod --dbpath C:\\data\\db');
      console.log('2. Seed data: npm run seed');
      console.log('3. Test: curl "http://localhost:8080/v1/api/products/search-mongodb?q=galay"');
    } else {
      console.log('‚ùå Engine kh√¥ng h·ª£p l·ªá. S·ª≠ d·ª•ng: elasticsearch ho·∫∑c mongodb');
      return;
    }
    
    // Ghi file config
    fs.writeFileSync(configPath, config);
    
    console.log(`\nüéØ Search engine hi·ªán t·∫°i: ${engine.toUpperCase()}`);
    console.log('üîÑ Kh·ªüi ƒë·ªông l·∫°i server ƒë·ªÉ √°p d·ª•ng thay ƒë·ªïi');
    
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  }
};

// L·∫•y tham s·ªë t·ª´ command line
const engine = process.argv[2];

if (!engine) {
  console.log('üîß C√¥ng c·ª• chuy·ªÉn ƒë·ªïi Search Engine');
  console.log('');
  console.log('C√°ch s·ª≠ d·ª•ng:');
  console.log('  node switch-search-engine.js elasticsearch');
  console.log('  node switch-search-engine.js mongodb');
  console.log('');
  console.log('T√≠nh nƒÉng:');
  console.log('  elasticsearch - S·ª≠ d·ª•ng Elasticsearch (fuzzy search m·∫°nh)');
  console.log('  mongodb      - S·ª≠ d·ª•ng MongoDB (ƒë∆°n gi·∫£n, kh√¥ng c·∫ßn Docker)');
} else {
  switchSearchEngine(engine);
}


